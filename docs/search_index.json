[
["index.html", "R, Git &amp; GitHub Preface Structure of the book Software information", " R, Git &amp; GitHub Aravind Hebbali 2019-02-18 Preface This work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. Structure of the book Chapter 1 introduces the concept of version control and its benefits. Chapter 2 introduces basic command line skills. Chapter 3 deals with setting up git. Chapter 4 shows how to set up GitHub projects using RStudio. Chapter 5 gives a tour of GitHub features. Chapter 6 explores git commands in some detail. Software information The R session information when compiling this book is shown below: sessionInfo() ## R version 3.5.1 (2018-07-02) ## Platform: x86_64-w64-mingw32/x64 (64-bit) ## Running under: Windows 10 x64 (build 17134) ## ## Matrix products: default ## ## locale: ## [1] LC_COLLATE=English_India.1252 LC_CTYPE=English_India.1252 ## [3] LC_MONETARY=English_India.1252 LC_NUMERIC=C ## [5] LC_TIME=English_India.1252 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## loaded via a namespace (and not attached): ## [1] compiler_3.5.1 magrittr_1.5 bookdown_0.7 tools_3.5.1 ## [5] htmltools_0.3.6 rstudioapi_0.8 yaml_2.2.0 Rcpp_1.0.0 ## [9] stringi_1.2.4 rmarkdown_1.11 knitr_1.21 stringr_1.3.1 ## [13] xfun_0.4 digest_0.6.18 evaluate_0.12 "],
["about-the-author.html", "About the Author", " About the Author Aravind Hebbali is the founder of Rsquared Academy. He earned his Masters in Economics from Madras School of Economics. As an active R user, he has authored several R packages such as olsrr rfm descriptr blorr xplorerr In 2015, he founded Rsquared Academy, a free and open source education initiative with focus on data science and analytics. Apart from self paced online courses, Rsquared Academy offers customized learning modules for corporates and universities. You can find him on GitHub. "],
["intro.html", "Chapter 1 Introduction 1.1 Version Control 1.2 Git 1.3 GitHub", " Chapter 1 Introduction 1.1 Version Control 1.1.1 What is version control? Version control, also known as revision control or source control is the management of changes to documents. It lets you save a snapshot of your complete project at any time you want. You can later compare the snapshots to check the differences. It is a system that records changes to files over a period of time so that you can recall specific versions later. The files can be: software files text files presentations books images You may ask how it is different from a backup system. The main difference is that version control records the changes made to a project and allows you to revert to a previous state. 1.1.2 Why use version control? It stems from the need for a logical way to organize and control revisions to documents. It allows us to: revert to a specific version/state compare changes over time identify who made the changes recover files in case of loss or other errors Version control will allow you to: work on same set of files in a shared folder with your teammates manage conflicts and merge all changes into a common version get access to latest version of all project files stop worrying about version naming system know the difference between different versions 1.1.3 Create Backups 1.1.4 Track Changes 1.1.5 Work Collaboratively 1.1.6 Prevent Conflicts 1.2 Git Git is a version control system for tracking changes in files and coordinating work on those files among multiple people. It is free open source most widely used distributed efficient fast easy to learn secure reliable compatible with multiple operating system Git was developed by Linus Torvalds, the creator of the Linux operating system. 1.3 GitHub It is a web based hosting for version control using Git. It is the hub where developers store their projects and collaborate with others. It stores the source code of software projects, provides a place for discussion, a platform for collaboration and contribution. GitHub is the defacto home of open source software. You can view the source code of several popular open source softwares and contribute to them. You can report bugs, request for new features, automate a lot of things and plan your projects as well. "],
["shell.html", "Chapter 2 Introduction to Shell 2.1 Introduction 2.2 Directory 2.3 Files 2.4 Word count", " Chapter 2 Introduction to Shell 2.1 Introduction 2.2 Directory 2.2.1 Current directory pwd ## /cygdrive/j/R/ebooks/rgit 2.2.2 Navigate cd docs pwd ## /cygdrive/j/R/ebooks/rgit/docs cd .. pwd ## /cygdrive/j/R/ebooks 2.2.3 View contents ls ## 00-author.Rmd ## 01-intro.Rmd ## 02-shell.Rmd ## 03-install.Rmd ## 04-projects.Rmd ## 05-github.Rmd ## 06-commands.Rmd ## README.md ## _bookdown.yml ## _output.yml ## docs ## index.Rmd ## r-git-github.Rmd ## rgit.Rproj ## style.css 2.2.4 Create directory mkdir examples ls ## 00-author.Rmd ## 01-intro.Rmd ## 02-shell.Rmd ## 03-install.Rmd ## 04-projects.Rmd ## 05-github.Rmd ## 06-commands.Rmd ## README.md ## _bookdown.yml ## _output.yml ## docs ## examples ## index.Rmd ## r-git-github.Rmd ## rgit.Rproj ## style.css 2.2.5 Remove directory rmdir examples ls ## 00-author.Rmd ## 01-intro.Rmd ## 02-shell.Rmd ## 03-install.Rmd ## 04-projects.Rmd ## 05-github.Rmd ## 06-commands.Rmd ## README.md ## _bookdown.yml ## _output.yml ## docs ## index.Rmd ## r-git-github.Rmd ## rgit.Rproj ## style.css 2.3 Files 2.3.1 List files ls ## 00-author.Rmd ## 01-intro.Rmd ## 02-shell.Rmd ## 03-install.Rmd ## 04-projects.Rmd ## 05-github.Rmd ## 06-commands.Rmd ## README.md ## _bookdown.yml ## _output.yml ## docs ## index.Rmd ## r-git-github.Rmd ## rgit.Rproj ## style.css ls -a ## . ## .. ## .Rhistory ## .Rproj.user ## .git ## .gitignore ## 00-author.Rmd ## 01-intro.Rmd ## 02-shell.Rmd ## 03-install.Rmd ## 04-projects.Rmd ## 05-github.Rmd ## 06-commands.Rmd ## README.md ## _bookdown.yml ## _output.yml ## docs ## index.Rmd ## r-git-github.Rmd ## rgit.Rproj ## style.css 2.3.2 Copy files cp index.Rmd home.Rmd ls ## 00-author.Rmd ## 01-intro.Rmd ## 02-shell.Rmd ## 03-install.Rmd ## 04-projects.Rmd ## 05-github.Rmd ## 06-commands.Rmd ## README.md ## _bookdown.yml ## _output.yml ## docs ## home.Rmd ## index.Rmd ## r-git-github.Rmd ## rgit.Rproj ## style.css 2.3.3 Rename files mv home.Rmd homepage.Rmd ls ## 00-author.Rmd ## 01-intro.Rmd ## 02-shell.Rmd ## 03-install.Rmd ## 04-projects.Rmd ## 05-github.Rmd ## 06-commands.Rmd ## README.md ## _bookdown.yml ## _output.yml ## docs ## homepage.Rmd ## index.Rmd ## r-git-github.Rmd ## rgit.Rproj ## style.css 2.3.4 Remove files rm homepage.Rmd ls ## 00-author.Rmd ## 01-intro.Rmd ## 02-shell.Rmd ## 03-install.Rmd ## 04-projects.Rmd ## 05-github.Rmd ## 06-commands.Rmd ## README.md ## _bookdown.yml ## _output.yml ## docs ## index.Rmd ## r-git-github.Rmd ## rgit.Rproj ## style.css 2.3.5 Move files mkdir examples cp index.Rmd home.Rmd mv home.Rmd examples.Rmd cd examples ls 2.3.6 Print content cat style.css ## p.caption { ## color: #777; ## margin-top: 10px; ## } ## p code { ## white-space: inherit; ## } ## pre { ## word-break: normal; ## word-wrap: normal; ## } ## pre code { ## white-space: inherit; ## } head style.css ## p.caption { ## color: #777; ## margin-top: 10px; ## } ## p code { ## white-space: inherit; ## } ## pre { ## word-break: normal; ## word-wrap: normal; 2.3.7 Create file touch todo.txt ls ## 00-author.Rmd ## 01-intro.Rmd ## 02-shell.Rmd ## 03-install.Rmd ## 04-projects.Rmd ## 05-github.Rmd ## 06-commands.Rmd ## README.md ## _bookdown.yml ## _output.yml ## docs ## examples ## examples.Rmd ## index.Rmd ## r-git-github.Rmd ## rgit.Rproj ## style.css ## todo.txt echo &quot;hello&quot; &gt; file1.txt 2.4 Word count # characters, words and lines wc style.css ## 14 26 172 style.css # characters wc style.css -c ## 172 style.css # words wc style.css -w ## 26 style.css # lines wc style.css -l ## 14 style.css "],
["setup.html", "Chapter 3 Installation &amp; Set Up 3.1 GitHub Repository 3.2 Configure Git 3.3 Workflow 3.4 Configure RStudio", " Chapter 3 Installation &amp; Set Up 3.1 GitHub Repository 3.2 Configure Git 3.3 Workflow 3.3.1 Clone repository 3.3.2 Make changes 3.3.3 Register changes 3.3.4 Push changes 3.3.5 Check remote 3.4 Configure RStudio "],
["projects.html", "Chapter 4 Projects 4.1 New Projects 4.2 Existing Projects", " Chapter 4 Projects 4.1 New Projects 4.1.1 Create repository 4.1.2 Clone repository 4.1.3 Make changes 4.1.4 Stage, Commit &amp; Push 4.1.5 Modify remote repo 4.1.6 Pull changes 4.2 Existing Projects 4.2.1 Create repository 4.2.2 Clone repository 4.2.3 Move files 4.2.4 Stage, Commit &amp; Push 4.2.5 Check remote repo "],
["tour.html", "Chapter 5 GitHub Tour 5.1 Tour 5.2 GitHub Pages", " Chapter 5 GitHub Tour 5.1 Tour 5.1.1 Profile 5.1.2 Organization 5.1.3 Gist 5.1.4 Repository 5.1.4.1 Commits 5.1.4.2 Contributor 5.1.4.3 Wiki 5.1.4.4 Issues 5.1.4.5 Pull Requests 5.1.4.6 Projects 5.1.4.7 Branch 5.1.4.8 Fork 5.1.4.9 Star 5.1.4.10 Watch 5.2 GitHub Pages 5.2.1 Introduction 5.2.2 Set up "],
["commands.html", "Chapter 6 Git Commands 6.1 Introduction 6.2 Configuration 6.3 Repository 6.4 Tracking 6.5 Synchronize 6.6 Others", " Chapter 6 Git Commands 6.1 Introduction 6.1.1 Help 6.1.2 Version 6.2 Configuration 6.2.1 Username 6.2.2 Email 6.3 Repository 6.3.1 Initiate 6.3.2 Clone 6.4 Tracking 6.4.1 Status 6.4.2 Diff 6.4.3 Add 6.4.4 Reset 6.4.5 Commit 6.5 Synchronize 6.5.1 Push 6.5.2 Fetch 6.5.3 Merge 6.5.4 Pull 6.6 Others 6.6.1 Log 6.6.2 Show 6.6.3 Remote "]
]
